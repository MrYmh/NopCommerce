@using Nop.Web.Areas.Admin.Models.Warehouses
@model AcceptStockRequestModel
@{
    ViewBag.PageTitle = T("Admin.Warehouses.Stock.AddNewReceivedStock").Text;
    NopHtml.SetActiveMenuItemSystemName("Warehouses list");
}

    <form id="accept-stock" asp-controller="Stock" asp-action="CreateAcceptStockRequest" method="post">
    <input asp-for="StockRequestId" type="hidden" />
    <input asp-for="RequestorId" type="hidden" />
    <input asp-for="WarehouseId" type="hidden" />
    <input asp-for="StockRequest" type="hidden" />
    <input asp-for="StockRequestItems" type="hidden" />
    <div class="content-header clearfix">
        <h1 class="float-left">
            @T("Admin.Warehouses.Stock.AcceptStockRequest")
            <small>
                <i class="fas fa-arrow-circle-left"></i>
                <a asp-controller="StockRequest" asp-action="List" asp-route-warehouseId="@Model.WarehouseId">@T("Admin.Warehouses.BackToList")</a>
            </small>
        </h1>
        <div class="float-right">
            
            <button name="save" id="sendAcceptData" class="btn btn-primary">
                <i class="far fa-save"></i>
                @T("Admin.Common.Save")
            </button>
            @await Component.InvokeAsync(typeof(AdminWidgetViewComponent), new { widgetZone = AdminWidgetZones.CategoryDetailsButtons, additionalData = Model })
        </div>
    </div>

    @await Html.PartialAsync("_CreateOrUpdateAcceptRequest", Model)
    </form>

@* <script>
    




    $(document).ready(function () {
        $('#vendor').focus();
        $('#sendData').click(function () {
            // Collect the vendor ID
            var vendorId = $('#vendor').val();

            // Initialize the array for stock items
            var stockItems = [];

            // Iterate over each row in the table
            $('#stockItemsTable tbody tr').each(function () {
                var row = $(this);
                stockItems.push({
                    Sku: row.find('td:eq(0) input').val().trim(),
                    StockQuantity: parseInt(row.find('td:eq(1) input').val().trim()),
                    UnitPrice: parseFloat(row.find('td:eq(2) input').val().trim()),
                    Tax: parseFloat(row.find('td:eq(3) input').val().trim()),
                    Discount: parseFloat(row.find('td:eq(4) input').val().trim()),
                    Profit: parseFloat(row.find('td:eq(5) input').val().trim()),
                    WarehouseProductCombinationId: parseInt(row.find('td:eq(6) input').val().trim())


                    
                });
            });

            // Create the stock history model
            var stockHistoryModel = {
                VendorId: vendorId,
                StockItems: stockItems
            };

            // Make the AJAX call to your API
            $.ajax({
                url: '/api/WarehouseProducts/CreateReceivingRecord?warehouseId=' + @Model.WarehouseId, // Make sure this URL is correct
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify(stockHistoryModel),
                success: function (response) {
                    //alert('Data submitted successfully: ' + response.message);
                    window.location.href = '/Admin/StockHistory/List?warehouseId=' + @Model.WarehouseId ;
                },
                error: function (xhr, status, error) {
                    alert('Error submitting data: ' + error);
                }
            });
        });
    });

</script> *@